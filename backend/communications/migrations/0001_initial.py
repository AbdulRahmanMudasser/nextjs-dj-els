# Generated by Django 4.2.7 on 2025-09-15 20:41

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
        ('courses', '0001_initial'),
        ('contenttypes', '0002_remove_content_type_name'),
    ]

    operations = [
        migrations.CreateModel(
            name='DiscussionForum',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(help_text='Forum title', max_length=200)),
                ('description', models.TextField(help_text='Forum description')),
                ('is_general', models.BooleanField(default=False, help_text='Whether this is a general forum')),
                ('is_private', models.BooleanField(default=False, help_text='Whether forum is private')),
                ('allowed_roles', models.JSONField(default=list, help_text='Roles allowed to access this forum')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('course_offering', models.ForeignKey(blank=True, help_text='Course offering (null for general forums)', null=True, on_delete=django.db.models.deletion.CASCADE, related_name='forums', to='courses.courseoffering')),
                ('created_by', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='created_forums', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Discussion Forum',
                'verbose_name_plural': 'Discussion Forums',
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='DiscussionThread',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(help_text='Thread title', max_length=200)),
                ('content', models.TextField(help_text='Thread content')),
                ('is_pinned', models.BooleanField(default=False, help_text='Whether thread is pinned')),
                ('is_locked', models.BooleanField(default=False, help_text='Whether thread is locked')),
                ('view_count', models.PositiveIntegerField(default=0, help_text='Number of views')),
                ('last_activity', models.DateTimeField(auto_now=True, help_text='Last activity timestamp')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('author', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='authored_threads', to=settings.AUTH_USER_MODEL)),
                ('forum', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='threads', to='communications.discussionforum')),
            ],
            options={
                'verbose_name': 'Discussion Thread',
                'verbose_name_plural': 'Discussion Threads',
                'ordering': ['-is_pinned', '-last_activity'],
            },
        ),
        migrations.CreateModel(
            name='DiscussionReply',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('content', models.TextField(help_text='Reply content')),
                ('is_solution', models.BooleanField(default=False, help_text='Whether this is marked as solution')),
                ('upvotes', models.PositiveIntegerField(default=0, help_text='Number of upvotes')),
                ('downvotes', models.PositiveIntegerField(default=0, help_text='Number of downvotes')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('author', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='authored_replies', to=settings.AUTH_USER_MODEL)),
                ('parent_reply', models.ForeignKey(blank=True, help_text='Parent reply for nested discussions', null=True, on_delete=django.db.models.deletion.CASCADE, related_name='child_replies', to='communications.discussionreply')),
                ('thread', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='replies', to='communications.discussionthread')),
            ],
            options={
                'verbose_name': 'Discussion Reply',
                'verbose_name_plural': 'Discussion Replies',
                'ordering': ['created_at'],
            },
        ),
        migrations.CreateModel(
            name='PrivateMessage',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('subject', models.CharField(help_text='Message subject', max_length=200)),
                ('content', models.TextField(help_text='Message content')),
                ('attachments', models.JSONField(default=list, help_text='Message attachment URLs')),
                ('is_read', models.BooleanField(default=False, help_text='Whether message has been read')),
                ('read_at', models.DateTimeField(blank=True, help_text='When message was read', null=True)),
                ('is_deleted_by_sender', models.BooleanField(default=False, help_text='Whether deleted by sender')),
                ('is_deleted_by_recipient', models.BooleanField(default=False, help_text='Whether deleted by recipient')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('parent_message', models.ForeignKey(blank=True, help_text='Parent message for replies', null=True, on_delete=django.db.models.deletion.CASCADE, related_name='replies', to='communications.privatemessage')),
                ('recipient', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='received_messages', to=settings.AUTH_USER_MODEL)),
                ('sender', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='sent_messages', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Private Message',
                'verbose_name_plural': 'Private Messages',
                'ordering': ['-created_at'],
                'indexes': [models.Index(fields=['sender', 'created_at'], name='communicati_sender__337950_idx'), models.Index(fields=['recipient', 'is_read', 'created_at'], name='communicati_recipie_0237cb_idx'), models.Index(fields=['parent_message'], name='communicati_parent__514b1d_idx')],
            },
        ),
        migrations.CreateModel(
            name='Notification',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(help_text='Notification title', max_length=200)),
                ('message', models.TextField(help_text='Notification message')),
                ('notification_type', models.CharField(choices=[('INFO', 'Information'), ('WARNING', 'Warning'), ('SUCCESS', 'Success'), ('ERROR', 'Error')], default='INFO', max_length=20)),
                ('category', models.CharField(choices=[('ASSIGNMENT', 'Assignment'), ('GRADE', 'Grade'), ('ENROLLMENT', 'Enrollment'), ('SYSTEM', 'System'), ('MESSAGE', 'Message'), ('FORUM', 'Forum'), ('COURSE', 'Course')], default='SYSTEM', max_length=20)),
                ('read', models.BooleanField(default=False, help_text='Whether notification has been read')),
                ('read_at', models.DateTimeField(blank=True, help_text='When notification was read', null=True)),
                ('action_url', models.CharField(blank=True, help_text='URL for action', max_length=500, null=True)),
                ('related_object_id', models.PositiveIntegerField(blank=True, help_text='ID of related object', null=True)),
                ('expires_at', models.DateTimeField(blank=True, help_text='When notification expires', null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('recipient', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='notifications', to=settings.AUTH_USER_MODEL)),
                ('related_object_type', models.ForeignKey(blank=True, help_text='Type of related object', null=True, on_delete=django.db.models.deletion.SET_NULL, to='contenttypes.contenttype')),
                ('sender', models.ForeignKey(blank=True, help_text='User who sent the notification (null for system notifications)', null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='sent_notifications', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Notification',
                'verbose_name_plural': 'Notifications',
                'ordering': ['-created_at'],
                'indexes': [models.Index(fields=['recipient', 'read', 'created_at'], name='communicati_recipie_109d65_idx'), models.Index(fields=['category', 'notification_type'], name='communicati_categor_18393e_idx'), models.Index(fields=['expires_at'], name='communicati_expires_208a34_idx')],
            },
        ),
        migrations.AddIndex(
            model_name='discussionthread',
            index=models.Index(fields=['forum', 'last_activity'], name='communicati_forum_i_c3a3ba_idx'),
        ),
        migrations.AddIndex(
            model_name='discussionthread',
            index=models.Index(fields=['author', 'created_at'], name='communicati_author__b13ff6_idx'),
        ),
        migrations.AddIndex(
            model_name='discussionthread',
            index=models.Index(fields=['is_pinned', 'is_locked'], name='communicati_is_pinn_7b5661_idx'),
        ),
        migrations.AddIndex(
            model_name='discussionreply',
            index=models.Index(fields=['thread', 'created_at'], name='communicati_thread__f1e415_idx'),
        ),
        migrations.AddIndex(
            model_name='discussionreply',
            index=models.Index(fields=['author', 'created_at'], name='communicati_author__e4dd6d_idx'),
        ),
        migrations.AddIndex(
            model_name='discussionreply',
            index=models.Index(fields=['is_solution'], name='communicati_is_solu_cb9586_idx'),
        ),
        migrations.AddIndex(
            model_name='discussionforum',
            index=models.Index(fields=['course_offering', 'is_general'], name='communicati_course__a6ba19_idx'),
        ),
        migrations.AddIndex(
            model_name='discussionforum',
            index=models.Index(fields=['is_private'], name='communicati_is_priv_1a6233_idx'),
        ),
    ]
